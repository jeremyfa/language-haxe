'scopeName': 'source.hx'
'fileTypes': [
  'hx'
]
'foldingStartMarker': '(\\{\\s*(//.*)?$|^\\s*// \\{\\{\\{|#if)'
'foldingStopMarker': '^\\s*(\\}|// \\}\\}\\}$|#end)'
'firstLineMatch': '^#!.*\\b(haxe)'
'name': 'Haxe'
'patterns': [
  {
    'comment': 'Haxe import/using'
    'begin': '(?<!\\.)\\b(import|using)(?!\\s*:)\\b'
    'beginCaptures':
      '1':
        'name': 'keyword.control.haxe'
    'patterns': [
      {
        'comment': '(default|*|name) (in|as) alias'
        'captures':
          '1':
            'name': 'entity.name.type.module.haxe'
          '2':
            'name': 'variable.language.import-all.haxe'
          '3':
            'name': 'keyword.control.haxe'
          '4':
            'name': 'entity.name.type.module.haxe'
        'match': '(?x)
          (?: \\b([A-Z][a-zA-Z_$0-9]*)\\b | (\\*) | \\b(?:[a-zA-Z_$][a-zA-Z_$0-9]*)\\b)
          \\s*
          (\\b (?:in|as) \\b)
          \\s*
          (?: \\b([A-Z][a-zA-Z_$0-9]*)\\b | \\b(?:[a-zA-Z_$][a-zA-Z_$0-9]*)\\b)
        '
      }
      {
        'match': '\\*'
        'name': 'variable.language.import-all.haxe'
      }
      {
        'include': '#strings'
      }
      {
        'include': '#comments'
      }
      {
        'include': '#constants'
      }
      {
        'include': '#types'
      }
    ]
    'end': '(?=;|$)'
    'name': 'meta.import.haxe'
  }
  {
    'match': '(?<!\\.)\\b(super|this)(?!\\s*:)\\b|(?<=\\?)(?:\\s*)(super|this)(?=\\s*:)'
    'captures':
      '1':
        'name': 'variable.language.haxe'
      '2':
        'name': 'variable.language.haxe'
  }
  {
    'match': '(=>)'
    'captures':
      '0':
        'name': 'meta.operator.arrow.haxe'
  }
  {
    'begin': '''(?x)
      \\b(class)\\b
    '''
    'beginCaptures':
      '1':
        'name': 'storage.type.class.haxe'
      '2':
        'name': 'entity.name.type.haxe'
    'end': '(?=\\{)'
    'patterns': [
      {
        'include': '#comments'
      }
      {
        'include': '#metadatas'
      }
      {
        'include': '#properties'
      }
      {
        'include': '#constants'
      }
      {
        'include': '#types'
      }
      {
        'include': '#parents'
      }
    ]
  }
  {
    'begin': '''(?x)
      \\b(typedef|enum|abstract|interface)\\b
    '''
    'beginCaptures':
      '1':
        'name': 'storage.type.modifier.haxe'
      '2':
        'name': 'entity.name.type.haxe'
    'end': '(?=\\{|;)'
    'patterns': [
      {
        'include': '#comments'
      }
      {
        'include': '#metadatas'
      }
      {
        'include': '#properties'
      }
      {
        'include': '#constants'
      }
      {
        'include': '#types'
      }
      {
        'include': '#parents'
      }
    ]
  }
  {
    'captures':
      '1':
        'name': 'keyword.control.new.haxe'
      '2':
        'name': 'entity.name.type.instance.haxe'
    'match': '(new)\\s+(\\$?\\w+(?:\\.\\w*)?)'
    'name': 'meta.class.instance.constructor'
  }
  {
    'include': '#strings'
  }
  {
    'include': '#comments'
  }
  {
    'include': '#metadatas'
  }
  {
    'begin': '(?:#if|#else|#elseif|#end)'
    'name': 'constant.variable.conditional.keyword.control.directive.haxe'
    'end': '(?=$)'
  }
  {
    'match': '(?<!\\.)\\b(class|enum|function|interface|typedef|abstract)(?!\\s*:)\\b'
    'name': 'storage.type.haxe'
  }
  {
    'match': '(?<!\\.)\\b(extends|implements|private|protected|public|static|dynamic|override|inline|macro)(?!\\s*:)\\b'
    'name': 'storage.modifier.haxe'
  }
  {
    'match': '(?<!\\.)\\b(var)(?!\\s*:)\\b'
    'name': 'storage.type.var.haxe'
  }
  {
    'match': '(?<!\\.)\\b(untyped|cast|break|case|catch|continue|do|else|finally|for|in|if|import|from|package|return|switch|throw|try|while|with)(?!\\s*:)\\b'
    'name': 'keyword.control.haxe'
  }
  {
    'match': '(?<!\\.)\\b(default)\\b'
    'name': 'keyword.control.haxe'
  }
  {
    'match': '\\$(?:[A-Za-z0-9_]+\\b)?'
    'name': 'support.variable.macro.haxe'
  }
  {
    'match': '\\.\\.\\.'
    'name': 'keyword.operator.spread.haxe'
  }
  {
    'match': '(?<!\\.)\\b(true|false)(?!\\s*:)\\b|(?<=\\?)(?:\\s*)(true|false)(?=\\s*:)'
    'captures':
      '1':
        'name': 'constant.language.boolean.$1.haxe'
      '2':
        'name': 'constant.language.boolean.$2.haxe'
  }
  {
    'match': '(?<!\\.)\\b(null)(?!\\s*:)\\b|(?<=\\?)(?:\\s*)(null)(?=\\s*:)'
    'captures':
      '1':
        'name': 'constant.language.null.haxe'
      '2':
        'name': 'constant.language.null.haxe'
  }
  {
    'include': '#constants'
  }
  {
    'match': '\\b(Infinity|NaN|undefined)\\b'
    'name': 'constant.language.haxe'
  }
  {
    'begin': '(~/)(?:[^/\\\\]*(?:\\\\.[^/\\\\]*)*)'
    'beginCaptures':
      '1':
        'name': 'punctuation.definition.string.begin.haxe'
    'end': '(/)[gimuy]*'
    'endCaptures':
      '1':
        'name': 'punctuation.definition.string.end.haxe'
    'name': 'string.regexp.haxe'
    'patterns': [
      {
        'include': 'source.haxe.regexp'
      }
    ]
  }
  {
    'include': '#operators'
  }
  {
    'include': '#method_calls'
  }
  {
    'include': '#function_calls'
  }
  {
    'include': '#numbers'
  }
  {
    'include': '#object_variable'
  }
  {
    'include': '#properties'
  }
  {
    'include': '#types'
  }
  {
    'match': '(?<!\\$)\\b[0-9]+[\\w$]*'
    'name': 'invalid.illegal.identifier.haxe'
  }
  {
    'match': '\\;'
    'name': 'punctuation.terminator.statement.haxe'
  }
  {
    'match': ','
    'name': 'meta.delimiter.object.comma.haxe'
  }
  {
    'match': '\\.'
    'name': 'meta.delimiter.method.period.haxe'
  }
  {
    'captures':
      '1':
        'name': 'punctuation.section.scope.begin.haxe'
      '2':
        'name': 'punctuation.section.scope.end.haxe'
    'comment': 'Allows the special return snippet to fire.'
    'match': '({)(})'
  }
  {
    'begin': '{'
    'beginCaptures':
      '0':
        'name': 'meta.brace.curly.haxe'
    'end': '}'
    'endCaptures':
      '0':
        'name': 'meta.brace.curly.haxe'
    'patterns': [
      {
        'include': '$self'
      }
    ]
  }
  {
    'begin': '\\('
    'beginCaptures':
      '0':
        'name': 'meta.brace.round.haxe'
    'end': '\\)'
    'endCaptures':
      '0':
        'name': 'meta.brace.round.haxe'
    'patterns': [
      {
        'include': '$self'
      }
    ]
  }
  {
    'match': '\\[|\\]'
    'name': 'meta.brace.square.haxe'
  }
  {
    'match': '\\A#!.*$'
    'name': 'comment.line.shebang.haxe'
  }
]
'repository':
  'numbers':
    'patterns': [
      {
        'match': '\\b(?<!\\$)0(x|X)[0-9a-fA-F]+\\b(?!\\$)'
        'name': 'constant.numeric.hex.haxe'
      }
      {
        'match': '\\b(?<!\\$)0(b|B)[01]+\\b(?!\\$)'
        'name': 'constant.numeric.binary.haxe'
      }
      {
        'match': '\\b(?<!\\$)0(o|O)?[0-7]+\\b(?!\\$)'
        'name': 'constant.numeric.octal.haxe'
      }
      {
        'match': '''(?x)
          (?<!\\$)(?:
            (?:\\b[0-9]+(\\.)[0-9]+[eE][+-]?[0-9]+\\b)| # 1.1E+3
            (?:\\b[0-9]+(\\.)[eE][+-]?[0-9]+\\b)|       # 1.E+3
            (?:\\B(\\.)[0-9]+[eE][+-]?[0-9]+\\b)|       # .1E+3
            (?:\\b[0-9]+[eE][+-]?[0-9]+\\b)|            # 1E+3
            (?:\\b[0-9]+(\\.)[0-9]+\\b)|                # 1.1
            (?:\\b[0-9]+(\\.)\\B)|                      # 1.
            (?:\\B(\\.)[0-9]+\\b)|                      # .1
            (?:\\b[0-9]+\\b(?!\\.))                     # 1
          )(?!\\$)
        '''
        'captures':
          '0':
            'name': 'constant.numeric.decimal.haxe'
          '1':
            'name': 'meta.delimiter.decimal.period.haxe'
          '2':
            'name': 'meta.delimiter.decimal.period.haxe'
          '3':
            'name': 'meta.delimiter.decimal.period.haxe'
          '4':
            'name': 'meta.delimiter.decimal.period.haxe'
          '5':
            'name': 'meta.delimiter.decimal.period.haxe'
          '6':
            'name': 'meta.delimiter.decimal.period.haxe'
      }
    ]
  'operators':
    'patterns': [
      {
        'match': '%=|\\+=|-=|\\*=|(?<!\\()/='
        'name': 'keyword.operator.assignment.compound.haxe'
      }
      {
        'match': '&=|\\^=|<<=|>>=|>>>=|\\|='
        'name': 'keyword.operator.assignment.compound.bitwise.haxe'
      }
      {
        'match': '!=|<=|>=|==|<|>'
        'name': 'keyword.operator.comparison.haxe'
      }
      {
        'match': '&&|!|\\|\\|'
        'name': 'keyword.operator.logical.haxe'
      }
      {
        'match': '&|\\||\\^|~'
        'name': 'keyword.operator.bitwise.haxe'
      }
      {
        'match': '\\?|:'
        'name': 'keyword.operator.haxe'
      }
      {
        'match': '='
        'name': 'keyword.operator.assignment.haxe'
      }
      {
        'match': '--'
        'name': 'keyword.operator.decrement.haxe'
      }
      {
        'match': '\\+\\+'
        'name': 'keyword.operator.increment.haxe'
      }
      {
        'match': '%|\\*|/|-|\\+'
        'name': 'keyword.operator.haxe'
      }
    ]
  'strings':
    'patterns': [
      {
        'begin': '\\\\"'
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.string.escaped.begin.haxe'
        'end': '\\\\"'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.string.escaped.end.haxe'
        'name': 'string.quoted.double.escaped.haxe'
        'patterns': [
          {
            'match': '\\\\\\\\\\\\.'
            'name': 'constant.character.escape.haxe'
          }
        ]
      }
      {
        'begin': '\\\\\''
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.string.escaped.begin.haxe'
        'end': '\\\\\''
        'endCaptures':
          '0':
            'name': 'punctuation.definition.string.escaped.end.haxe'
        'name': 'string.quoted.single.escaped.haxe'
        'patterns': [
          {
            'include': '#string_interpolations'
          }
          {
            'match': '\\\\\\\\\\\\.'
            'name': 'constant.character.escape.haxe'
          }
        ]
      }
      {
        'begin': '"'
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.string.begin.haxe'
        'end': '"'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.string.end.haxe'
        'name': 'string.quoted.double.haxe'
        'patterns': [
          {
            'match': '\\\\.'
            'name': 'constant.character.escape.haxe'
          }
        ]
      }
      {
        'begin': '(@(?:jsx|tpl|template|xml|html|dom)) *(")'
        'beginCaptures':
          '1':
            'name': 'constant.other.symbol.metadata.haxe'
          '2':
            'name': 'comment.haxe'
        'end': '(")'
        'endCaptures':
          '1':
            'name': 'comment.haxe'
        'name': 'meta.jsx.haxe'
        'patterns': [
          {
            'match': '\\\\.'
            'name': 'constant.character.escape.haxe'
          }
          {
            'include': '#jsx-inside-double-quoted'
          }
        ]
      }
      {
        'begin': '\''
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.string.begin.haxe'
        'end': '\''
        'endCaptures':
          '0':
            'name': 'punctuation.definition.string.end.haxe'
        'name': 'string.quoted.single.haxe'
        'patterns': [
          {
            'include': '#string_interpolations'
          }
          {
            'match': '\\\\.'
            'name': 'constant.character.escape.haxe'
          }
        ]
      }
      {
        'begin': '(@(?:jsx|tpl|template|xml|html|dom)) *(\')'
        'beginCaptures':
          '1':
            'name': 'constant.other.symbol.metadata.haxe'
          '2':
            'name': 'comment.haxe'
        'end': '(\')'
        'endCaptures':
          '1':
            'name': 'comment.haxe'
        'name': 'meta.jsx.haxe'
        'patterns': [
          {
            'match': '\\\\.'
            'name': 'constant.character.escape.haxe'
          }
          {
            'include': '#jsx-inside-single-quoted'
          }
        ]
      }
      {
        'begin': '(jsx|_) *\\( *(\')'
        'beginCaptures':
          '1':
            'name': 'support.function.haxe'
          '2':
            'name': 'comment.haxe'
        'end': '(\') *\\)'
        'endCaptures':
          '1':
            'name': 'comment.haxe'
        'name': 'meta.jsx.haxe'
        'patterns': [
          {
            'match': '\\\\.'
            'name': 'constant.character.escape.haxe'
          }
          {
            'include': '#jsx-inside-single-quoted'
          }
        ]
      }
      {
        'begin': '(jsx|_) *\\( *(")'
        'beginCaptures':
          '1':
            'name': 'support.function.haxe'
          '2':
            'name': 'comment.haxe'
        'end': '(") *\\)'
        'endCaptures':
          '1':
            'name': 'comment.haxe'
        'name': 'meta.jsx.haxe'
        'patterns': [
          {
            'match': '\\\\.'
            'name': 'constant.character.escape.haxe'
          }
          {
            'include': '#jsx-inside-double-quoted'
          }
        ]
      }
    ]
  'jsx-tag-attributes':
    'patterns': [
      {
        'include': '#jsx-tag-attribute-name'
      }
      {
        'include': '#jsx-string-double-quoted'
      }
      {
        'include': '#jsx-string-single-quoted'
      }
      {
        'include': '#jsx-evaluated-code'
      }
    ]
  'jsx-tag-attributes-inside-double-quoted':
    'patterns': [
      {
        'include': '#jsx-tag-attribute-name'
      }
      {
        'include': '#jsx-string-double-quoted-escaped'
      }
      {
        'include': '#jsx-string-single-quoted'
      }
      {
        'include': '#jsx-evaluated-code'
      }
    ]
  'jsx-tag-attributes-inside-single-quoted':
    'patterns': [
      {
        'include': '#jsx-tag-attribute-name'
      }
      {
        'include': '#jsx-string-double-quoted'
      }
      {
        'include': '#jsx-string-single-quoted-escaped'
      }
      {
        'include': '#jsx-evaluated-code'
      }
    ]
  'jsx-tag-attribute-name':
    'name': 'meta.tag.attribute-name.haxe'
    'match': '(?:\\$[a-zA-Z0-9\\-:]+|\\b([a-zA-Z0-9\\-:]+))'
    'captures':
      '1':
        'name': 'entity.other.attribute-name.haxe'
  'jsx-string-double-quoted':
    'begin': '"'
    'end': '"'
    'name': 'string.quoted.double.haxe'
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.haxe'
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.haxe'
    'patterns': [
      {
        'include': '#jsx-entities'
      }
    ]
  'jsx-string-double-quoted-escaped':
    'begin': '\\\\\\"'
    'end': '\\\\\\"'
    'name': 'string.quoted.double.haxe'
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.escaped.end.haxe'
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.escaped.begin.haxe'
    'patterns': [
      {
        'include': '#jsx-entities'
      }
    ]
  'jsx-string-single-quoted':
    'begin': '\''
    'end': '\''
    'name': 'string.quoted.single.haxe'
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.haxe'
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.haxe'
    'patterns': [
      {
        'include': '#jsx-entities'
      }
    ]
  'jsx-string-single-quoted-escaped':
    'begin': '\\\\\''
    'end': '\\\\\''
    'name': 'string.quoted.single.haxe'
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.escaped.end.haxe'
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.escaped.begin.haxe'
    'patterns': [
      {
        'include': '#jsx-entities'
      }
    ]
  'jsx-entities':
    'patterns': [
      {
        'name': 'constant.character.entity.haxe'
        'match': '(&)([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+)(;)'
        'captures':
          '1':
            'name': 'punctuation.definition.entity.haxe'
          '3':
            'name': 'punctuation.definition.entity.haxe'
      }
      {
        'name': 'invalid.illegal.bad-ampersand.haxe'
        'match': '&'
      }
    ]
  'jsx-evaluated-code':
    'begin': '{'
    'end': '}'
    'name': 'meta.brace.curly.haxe'
    'endCaptures':
      '0':
        'name': 'punctuation.definition.brace.curly.end.haxe'
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.brace.curly.start.haxe'
    'patterns': [
      {
        'include': '$self'
      }
    ]
  'jsx-tag-open':
    'begin': '(<)([a-zA-Z0-9\.:$_]+)'
    'end': '(/?>)'
    'name': 'tag.open.haxe'
    'endCaptures':
      '1':
        'name': 'punctuation.definition.tag.end.haxe'
    'beginCaptures':
      '1':
        'name': 'punctuation.definition.tag.begin.haxe'
      '2':
        'name': 'entity.name.tag.haxe'
    'patterns': [
      {
        'include': '#jsx-tag-attributes'
      }
    ]
  'jsx-tag-open-inside-double-quoted':
    'begin': '(<)([a-zA-Z0-9\.:$_]+)'
    'end': '(/?>)'
    'name': 'tag.open.haxe'
    'endCaptures':
      '1':
        'name': 'punctuation.definition.tag.end.haxe'
    'beginCaptures':
      '1':
        'name': 'punctuation.definition.tag.begin.haxe'
      '2':
        'name': 'entity.name.tag.haxe'
    'patterns': [
      {
        'include': '#jsx-tag-attributes-inside-double-quoted'
      }
    ]
  'jsx-tag-open-inside-single-quoted':
    'begin': '(<)([a-zA-Z0-9\.:$_]+)'
    'end': '(/?>)'
    'name': 'tag.open.haxe'
    'endCaptures':
      '1':
        'name': 'punctuation.definition.tag.end.haxe'
    'beginCaptures':
      '1':
        'name': 'punctuation.definition.tag.begin.haxe'
      '2':
        'name': 'entity.name.tag.haxe'
    'patterns': [
      {
        'include': '#jsx-tag-attributes-inside-single-quoted'
      }
    ]
  'jsx-tag-close':
    'match': '(</)([^>]+)(>)'
    'name': 'tag.closed.haxe'
    'captures':
      '1':
        'name': 'punctuation.definition.tag.begin.haxe'
      '2':
        'name': 'entity.name.tag.haxe'
      '3':
        'name': 'punctuation.definition.tag.end.haxe'
  'jsx-tag-invalid':
    'name': 'invalid.illegal.tag.incomplete.haxe'
    'match': '<\\s*>'
  'jsx-comments':
    'begin': '<[!%]--'
    'captures':
      '0':
        'name': 'punctuation.definition.comment.xml'
    'end': '--%?>'
    'name': 'comment.block.xml'
  'jsx':
    'name': 'meta.jsx.haxe'
    'patterns': [
      {
        'include': '#jsx-tag-open'
      }
      {
        'include': '#jsx-tag-close'
      }
      {
        'include': '#jsx-tag-invalid'
      }
      {
        'include': '#jsx-comments'
      }
    ]
  'jsx-inside-double-quoted':
    'name': 'meta.jsx.haxe'
    'patterns': [
      {
        'include': '#jsx-tag-open-inside-double-quoted'
      }
      {
        'include': '#jsx-tag-close'
      }
      {
        'include': '#jsx-tag-invalid'
      }
      {
        'include': '#jsx-comments'
      }
    ]
  'jsx-inside-single-quoted':
    'name': 'meta.jsx.haxe'
    'patterns': [
      {
        'include': '#jsx-tag-open-inside-single-quoted'
      }
      {
        'include': '#jsx-tag-close'
      }
      {
        'include': '#jsx-tag-invalid'
      }
      {
        'include': '#jsx-comments'
      }
    ]
  'function_params':
    'patterns': [
      {
        'begin': '\\('
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.parameters.begin.bracket.round.haxe'
        'end': '\\)'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.parameters.end.bracket.round.haxe'
        'name': 'meta.parameters.haxe'
        'patterns': [
          {
            'match': '(\\.\\.\\.)([a-zA-Z_$][\\w$]*)'
            'captures':
              '1':
                'name': 'keyword.operator.spread.haxe'
              '2':
                'name': 'variable.parameter.rest.function.haxe'
          }
          {
            'include': '$self'
          }
          {
            'match': '[a-zA-Z_$][\\w$]*'
            'name': 'variable.parameter.function.haxe'
          }
        ]
      }
    ]
  'function_body':
    'patterns': [
      {
        'begin': '{'
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.function.body.begin.bracket.curly.haxe'
        'end': '}'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.function.body.end.bracket.curly.haxe'
        'patterns': [
          {
            'include': '$self'
          }
        ]
      }
    ]
  'function_innards':
    'patterns': [
      {
        'match': '(?:\\b(async)\\b\\s*)?\\b(function)\\b(?:\\s*(\\*))?'
        'captures':
          '1':
            'name': 'storage.modifier.async.haxe'
          '2':
            'name': 'storage.type.function.haxe'
          '3':
            'name': 'storage.modifier.generator.haxe'
      }
      {
        'match': '[a-zA-Z_$][\\w$]*(?=\\s*\\()'
        'name': 'entity.name.function.haxe'
      }
      {
        'include': '#function_params'
      }
      {
        'include': '#comments'
      }
      {
        'include': '#metadatas'
      }
    ]
  'arrow_function_innards':
    'patterns': [
      {
        'match': '=>'
        'name': 'storage.type.function.arrow.haxe'
      }
      {
        'include': '#function_params'
      }
      {
        'match': '([a-zA-Z_$][\\w$]*)(?=\\s*=>)'
        'captures':
          '0':
            'name': 'meta.parameters.haxe'
          '1':
            'name': 'variable.parameter.function.haxe'
      }
      {
        'match': '(\\d[\\w$]*)'
        'captures':
          '0':
            'name': 'meta.parameters.haxe'
          '1':
            'name': 'invalid.illegal.identifier.haxe'
      }
    ]
  'arguments':
    'patterns': [
      {
        'begin': '\\('
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.arguments.begin.bracket.round.haxe'
        'end': '\\)'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.arguments.end.bracket.round.haxe'
        'name': 'meta.arguments.haxe'
        'patterns': [
          {
            'include': '$self'
          }
        ]
      }
    ]
  'method_calls':
    'patterns': [
      {
        # .methodCall(arg1, "arg2", [...])
        'begin': '(\\.)\\s*([\\w$]+)\\s*(?=\\()'
        'beginCaptures':
          '1':
            'name': 'meta.delimiter.method.period.haxe'
          '2':
            'patterns': [
              {
                'match': "[a-zA-Z_$][\\w$]*"
                'name': 'entity.name.function.haxe'
              }
              {
                'match': '\\d[\\w$]*'
                'name': 'invalid.illegal.identifier.haxe'
              }
            ]
        'end': '(?<=\\))'
        'name': 'meta.method-call.haxe'
        'patterns': [
          {
            'include': '#arguments'
          }
        ]
      }
    ]
  'function_calls':
    'patterns': [
      {
        # functionCall(arg1, "arg2", [...])
        'begin': '([\\w$]+)\\s*(?=\\()'
        'beginCaptures':
          '1':
            'patterns': [
              {
                'match': '''(?x)
                  \\b(trace)\\b
                '''
                'name': 'support.function.haxe'
              }
              {
                'match': "[a-zA-Z_$][\\w$]*"
                'name': 'entity.name.function.haxe'
              }
              {
                'match': '\\d[\\w$]*'
                'name': 'invalid.illegal.identifier.haxe'
              }
            ]
        'end': '(?<=\\))'
        'name': 'meta.function-call.haxe'
        'patterns': [
          {
            'include': '#arguments'
          }
        ]
      }
    ]
  'object_variable':
    'patterns': [
      {
        'comment': '`obj` in `obj.prop`, `obj.methodCall()`'
        'match': '(?:([A-Z][\\w$]*)|([a-zA-Z_$][\\w$]*)|(\\d\\w*))(?=\\s*\\.\\s*[a-zA-Z_$]\\w*)'
        'captures':
          '1':
            'name': 'entity.name.type.haxe'
          '2':
            'name': 'variable.other.object.haxe'
          '3':
            'name': 'invalid.illegal.identifier.haxe'
      }
    ]
  'properties':
    'patterns': [
      {
        'comment': '`prop` in `obj.prop`, `func().prop`'
        'match': '(\\.)\\s*(?:([0-9]+[\\w$]*)|([A-Z][A-Z0-9_$]*\\b\\$*)|(\\$*[A-Z][\\w$]*)|(\\$*[a-zA-Z_$][\\w$]*(?=\\.|\\[))|(\\$*[a-zA-Z_$][\\w$]*))'
        'captures':
          '1':
            'name': 'meta.delimiter.property.period.haxe'
          '2':
            'name': 'invalid.illegal.identifier.haxe'
          '3':
            'name': 'constant.other.property.haxe'
          '4':
            'name': 'entity.name.type.haxe'
          '5':
            'name': 'variable.other.property.haxe'
      }
    ]
  'metadatas':
    'patterns': [
      'match': '(@\\:?[a-zA-Z_$][\\w$]*\\b\\s*)'
      'captures':
        '0':
          'name': 'constant.other.symbol.metadata.haxe'
    ]
  'parents':
    'patterns': [
      {
        'match': '(\\bextends\\b|\\bimplements\\b)\\s+'
        'captures':
          '1':
            'name': 'storage.modifier.haxe'
      }
    ]
  'constants':
    'patterns': [
      {
        'match': '(?<!\\.)\\b([A-Z][A-Z0-9_]+)\\b|(?<=\\?)(?:\\s*)([A-Z][A-Z0-9_]+)(?=\\s*:)'
        'captures':
          '1':
            'name': 'constant.other.haxe'
          '2':
            'name': 'constant.other.haxe'
      }
    ]
  'types':
    'patterns': [
      {
        'match': '(\\b[A-Z][\\w$]*)'
        'captures':
          '1':
            'name': 'entity.name.type.haxe'
      }
    ]
  'string_interpolations':
    'patterns': [
      {
        'match': '(\\$)([a-zA-Z_][a-zA-Z0-9_]*)'
        'captures':
          '0':
            'name': 'constant.other.name.embedded.haxe'
      }
      {
        'begin': '\\$\\{'
        'captures':
          '0':
            'name': 'punctuation.section.embedded.haxe'
        'end': '\\}'
        'name': 'source.haxe.embedded.source'
        'patterns': [
          {
            'begin': '{'
            'beginCaptures':
              '0':
                'name': 'meta.brace.curly.haxe'
            'end': '}'
            'endCaptures':
              '0':
                'name': 'meta.brace.curly.haxe'
            'patterns': [
              {
                'include': '$self'
              }
            ]
          }
          {
            'include': '$self'
          }
        ]
      }
    ]
  'docblock':
    'patterns': [
      {
        'match': '(?<!\\w)@(abstract|access|alias|augments|author|async|attribute|arg|argument|beta|borrows|bubbes|callback|class|classdesc|config|const|constant|constructs|constructor|copyright|chainable|default|defaultvalue|deprecated|desc|description|enum|emits|event|example|exports|external|extends|extension|extensionfor|extension_for|for|file|fileoverview|fires|final|function|global|host|ignore|implements|inheritdoc|inner|instance|interface|kind|lends|license|listens|main|member|memberof|method|mixex|mixin(?:s|)|module|name|namespace|override|overview|param|private|prop|property|protected|readonly|readOnly|requires|required|return|returns|see|since|static|summary|submodule|this|throws|todo|tutorial|type|typedef|var|variation|version|virtual|uses|writeOnce)\\b'
        'name': 'storage.type.class.haxedoc'
      }
      {
        'match': '({\\b(?:[a-zA-Z_$][a-zA-Z_$0-9]*)\\b})\\s\\b([a-zA-Z_$][a-zA-Z_$0-9]*)\\b\\s*((?:(?!\\*\\/).)*)'
        'captures':
            '0':
              'name': 'other.meta.haxedoc'
            '1':
              'name': 'entity.name.type.instance.haxedoc'
            '2':
              'name': 'variable.other.haxedoc'
            '3':
              'name': 'other.description.haxedoc'
      }
    ]
  'comments':
    'patterns': [
      {
        'begin': '/\\*\\*(?!/)'
        'captures':
          '0':
            'name': 'punctuation.definition.comment.haxe'
        'patterns': [
          {
            'include': '#docblock'
          }
        ]
        'end': '\\*/'
        'name': 'comment.block.documentation.haxe'
      }
      {
        'begin': '/\\*'
        'captures':
          '0':
            'name': 'punctuation.definition.comment.haxe'
        'end': '\\*/'
        'name': 'comment.block.haxe'
      }
      {
        'begin': '(^[ \\t]+)?(?=//)'
        'beginCaptures':
          '1':
            'name': 'punctuation.whitespace.comment.leading.haxe'
        'end': '(?!\\G)'
        'patterns': [
          {
            'begin': '//'
            'beginCaptures':
              '0':
                'name': 'punctuation.definition.comment.haxe'
            'end': '\\n'
            'name': 'comment.line.double-slash.haxe'
          }
        ]
      }
    ]
